{% extends 'ARIPDIntranetBundle::layout.html.twig' %}

{% block title %}TCMB{% endblock %}

{% block javascripts %}
{{ parent() }}
<script type="text/javascript">
google.load('visualization', '1.1', {packages: ['corechart', 'controls']});

google.setOnLoadCallback(drawVisualization);

function drawVisualization() {
	var jsonData = $.ajax({
		url: "{{ path('tcmb_json') }}",
		dataType:"json",
		async: false
	}).responseText;
	
	var dashboard = new google.visualization.Dashboard(document.getElementById('dashboard'));
	var control = new google.visualization.ControlWrapper({
		'controlType': 'ChartRangeFilter',
		'containerId': 'control',
		'options': {
			// Filter by the date axis.
			'filterColumnIndex': 0,
			'ui': {
				'chartType': 'LineChart',
				'chartOptions': {
					'chartArea': {'width': '90%'},
					'hAxis': {'baselineColor': 'none'}
				},
				// Display a single series that shows the closing value of the stock.
				// Thus, this view has two columns: the date (axis) and the stock value (line series).
				'chartView': {
					'columns': [0, 3]
				},
				// 1 day in milliseconds = 24 * 60 * 60 * 1000 = 86,400,000
				'minRangeSize': 86400000
			}
		},
		// Initial range: 2002-06-18 to now.
		'state': {'range': {'start': new Date(2002, 5, 18), 'end': new Date(2002, 9, 18)}}
	});
	      
	var chart = new google.visualization.ChartWrapper({
		'chartType': 'CandlestickChart',
		'containerId': 'chart',
		'options': {
			// Use the same chart area width as the control for axis alignment.
			'chartArea': {'height': '80%', 'width': '90%'},
			'hAxis': {'slantedText': false},
			'vAxis': {'viewWindow': {'min': 0, 'max': 2063400.00000}},
			'legend': {'position': 'none'}
		},
		// Convert the first column from 'date' to 'string'.
		'view': {
			'columns': [{
				'calc': function(dataTable, rowIndex) {
					return dataTable.getFormattedValue(rowIndex, 0);
				},
				'type': 'string'
			}, 1, 2, 3, 4]
		}
	});

	// Create our data table out of JSON data loaded from server.
	var data = new google.visualization.DataTable(jsonData);
	
	dashboard.bind(control, chart);
	dashboard.draw(data);
	//console.log(JSON.stringify(data));
}
</script>
{% endblock %}

{% block body %}
<h2>Exchange Rates History</h2>
<h3>Data feed from Central Bank of the Republic of Turkey</h3>


<div id="dashboard">
	<div id="chart" style='width: 915px; height: 300px;'></div>
	<div id="control" style='width: 915px; height: 50px;'></div>
</div>



<h1>TCMB list</h1>

<table class="records_list">
    <thead>
        <tr>
            <th>Id</th>
            <th>Date</th>
            <th>Code</th>
            <th>Forexbuying</th>
            <th>Forexselling</th>
            <th>Banknotebuying</th>
            <th>Banknoteselling</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    {% for entity in entities %}
        <tr>
            <td><a href="{{ path('tcmb_show', { 'id': entity.id }) }}">{{ entity.id }}</a></td>
            <td>{% if entity.date %}{{ entity.date|date('Y-m-d H:i:s') }}{% endif %}</td>
            <td>{{ entity.code }}</td>
            <td>{{ entity.forexbuying }}</td>
            <td>{{ entity.forexselling }}</td>
            <td>{{ entity.banknotebuying }}</td>
            <td>{{ entity.banknoteselling }}</td>
            <td>
                <ul>
                    <li>
                        <a href="{{ path('tcmb_show', { 'id': entity.id }) }}">show</a>
                    </li>
                    <li>
                        <a href="{{ path('tcmb_edit', { 'id': entity.id }) }}">edit</a>
                    </li>
                </ul>
            </td>
        </tr>
    {% endfor %}
    </tbody>
</table>

<ul>
    <li>
        <a href="{{ path('tcmb_new') }}">
            Create a new entry
        </a>
    </li>
</ul>
{% endblock %}